name: Archlinux aarch64 Raspberry Pi Image Builder
on: [push]

permissions:
  contents: write

jobs:
  build-image:
    name: Build Archlinux aarch64 Raspberry Pi Image
    env:
      WORKDIR_BASE: ${{ github.workspace }}/run-${{ github.run_id }}
      LOOP_IMAGE_SIZE: 4G
      LOOP_IMAGE_PATH: ${{ github.workspace }}/run-${{ github.run_id }}/rpi_aarch64.img
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged
    environment: main
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Export build_config.env to GITHUB_ENV
      run: |
        while read line; do
          echo "$line" >> $GITHUB_ENV
        done < build_config.env

    - name: Install dependencies
      run: |
        pacman -Syu --noconfirm qemu-user-static-binfmt qemu-user-static dosfstools wget libarchive arch-install-scripts parted tree

    - name: Create Image File
      run: |
        mkdir -p $(dirname $LOOP_IMAGE_PATH)
        fallocate -l $LOOP_IMAGE_SIZE $LOOP_IMAGE_PATH
    
    - name: Setup Loop Device
      run: |
        losetup -fP $LOOP_IMAGE_PATH
        LOOP_DEVICE=$(losetup -j $LOOP_IMAGE_PATH | cut -d: -f1)
        echo "Loop device is $LOOP_DEVICE"
        echo "LOOP_DEVICE=$LOOP_DEVICE" >> $GITHUB_ENV

    - name: Create Partitions
      run: |
        parted --script $LOOP_DEVICE mklabel msdos
        parted --script $LOOP_DEVICE mkpart primary fat32 1MiB 257MiB
        parted --script $LOOP_DEVICE mkpart primary ext4 257MiB 100%
        parted --script $LOOP_DEVICE set 1 boot on
        parted --script $LOOP_DEVICE print
        losetup --find --partscan --show $LOOP_IMAGE_PATH
        ls ${LOOP_DEVICE}*
        tree /dev/

    - name: Format Partitions
      run: |
        losetup --find --partscan --show $LOOP_IMAGE_PATH
        ls ${LOOP_DEVICE}*
        mkfs.vfat -F32 ${LOOP_DEVICE}p1 -n AARCH64-BOOT
        mkfs.ext4 -q -E lazy_itable_init=0,lazy_journal_init=0 -F ${LOOP_DEVICE}p2 -L AARCH64-ROOT

    - name: Mount Partitions
      run: |
        mkdir -p $WORKDIR_BASE/root
        mount ${LOOP_DEVICE}p2 $WORKDIR_BASE/root
        mkdir -p $WORKDIR_BASE/root/boot
        mount ${LOOP_DEVICE}p1 $WORKDIR_BASE/root/boot